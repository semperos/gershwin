(ns gershwin.core-test
  (:require [gershwin.core :refer :all]))

'[gershwin.test :refer :all] require
'[gershwin.string :as str] require

: suite [-- ?]
  !! Applicative Utilities
  < 42 > < {:answer 42} :answer apply > unit-test
  < 42 > < 21 21 clojure.core/+ apply2 > unit-test
  < "bazbarfoo" > < "foo" "bar" "baz" clojure.core/str apply3 > unit-test
  < 1 > < 3 2 clojure.core/- apply-swap > unit-test

  !! Math
  < 42 > < 21 21 + > unit-test

  !! Booleans
  < true > < 42 boolean > unit-test
  < true > < 0 boolean > unit-test
  < true > < "" boolean > unit-test
  < true > < [] boolean > unit-test
  < true > < {} boolean > unit-test
  < false > < nil boolean > unit-test
  < false > < false boolean > unit-test
  < "yes" > < 42 "yes" "no" ? > unit-test
  < < "yes" > > < 42 < "yes" > < "no" > ? > unit-test
  < "yes" > < 42 < "yes" > < "no" > if > unit-test

  !! Collections
  < {:lang "gershwin"} > < {:lang "clojure"} :lang "gershwin" assoc > unit-test
  < [1 2 3 4] > < [1 2 3] 4 conj > unit-test
  < '(1 2 3 4) > < 1 '(2 3 4) cons > unit-test

  !! Strings
  < "football" > < "llabtoof" str/reverse > unit-test
  < "fzz" > < "foo" "o" "z" str/replace > unit-test ;

  !! @todo Current impl only supports single value returns
  !! < 4 3 > < 3 4 swap > unit-test
